{"version":3,"sources":["utils/DB.js","components/Players.js","App.js","reportWebVitals.js","index.js"],"names":["myHeaders","Headers","axios","get","headers","then","res","data","players","map","player","id","name","country","dob","cost","players_data","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","Players","props","handleSortChange","event","sort_field","target","getAttribute","sort_order","state","handleStateChange","filter_field","filter_value","handleFilterChange","parseInt","value","isNaN","getClassName","field_name","setState","filter","element","toLowerCase","search","sort","sortByProperty","property","a","b","DB","TableContainer","component","Paper","Table","aria-label","TableHead","className","this","align","onClick","col_id","TableBody","style","width","type","onChange","row","scope","React","Component","App","useEffect","sidenav","document","querySelector","M","Sidenav","init","href","data-target","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d3dfb1f6.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n//const url = (process.env.NODE_ENV === \"development\" ? \"\" : \"https://dream11-project2.herokuapp.com\");\r\n//const url = process.env.REACT_APP_API_URL;\r\nconst myHeaders = new Headers({\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n  });\r\n// Export an object containing methods we'll use for accessing the random user API\r\nexport default {\r\n  getPlayers: function() {\r\n    return axios\r\n    .get(\"/api/all/players\", {\r\n        headers : myHeaders,\r\n    })\r\n      .then(res => {\r\n        const players = res.data.players;\r\n        return players.map(player => {\r\n          return {\r\n            id : player.id,\r\n            name : player.name,\r\n            country : player.country,\r\n            dob : player.dob,\r\n            cost : player.cost\r\n          }\r\n        });\r\n      });\r\n  }\r\n};","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DB from \"../utils/DB\";\r\n\r\nvar players_data = [];\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nclass Players extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            sort_field : \"id\",\r\n            sort_order : 0,\r\n            filter_field : \"id\" ,\r\n            filter_value : \"\",\r\n            data : []\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        DB.getPlayers()\r\n        .then(players => {\r\n            players_data = players;\r\n            this.setState({...this.state, data : players});\r\n        });\r\n    }\r\n    \r\n    handleSortChange = event => {\r\n        let sort_field = event.target.getAttribute(\"col_id\");\r\n        let sort_order = (this.state.sort_field === sort_field ? 1-this.state.sort_order : 0);\r\n        \r\n        this.handleStateChange(sort_field, sort_order, this.state.filter_field, this.state.filter_value);\r\n    }\r\n\r\n    handleFilterChange = event => {\r\n        let filter_field = event.target.getAttribute(\"col_id\");\r\n        let filter_value = (filter_field === \"id\" || filter_field === \"cost\" ? parseInt(event.target.value) : event.target.value);\r\n        filter_value = ((filter_field === \"id\" || filter_field === \"cost\") && isNaN(filter_value) ? \"\" : filter_value);\r\n\r\n        this.handleStateChange(this.state.sort_field, this.state.sort_order, filter_field, filter_value);\r\n    }\r\n\r\n    getClassName = field_name => {\r\n        return this.state.sort_field!==field_name?\"\":0===this.state.sort_order?\"headerSortUp\":\"headerSortDown\";\r\n    }\r\n\r\n    handleStateChange = (sort_field, sort_order, filter_field, filter_value) => {\r\n        this.setState({\r\n            sort_field:sort_field,\r\n            sort_order:sort_order,\r\n            filter_field:filter_field,\r\n            filter_value:filter_value,\r\n            //data:User_Data.filter(element => (element[filter_field] === (filter_value === \"\" ? element[filter_field] : filter_value)) || !(element[filter_field].toString().toLowerCase().search(filter_value.toString().toLowerCase())) ).sort(this.sortByProperty(sort_field, sort_order))\r\n            data: players_data.filter(element => (element[filter_field] === (filter_value === \"\" ? element[filter_field] : filter_value)) || !(filter_field === \"id\" || filter_field === \"cost\" || element[filter_field].toLowerCase().search(filter_value.toLowerCase())) ).sort(this.sortByProperty(sort_field, sort_order))\r\n        });\r\n    }\r\n    \r\n\r\n\r\n    sortByProperty=(property, sort_order) => {  \r\n        return function(a,b){  \r\n           return (a[property] > b[property] ? (sort_order===0 ? 1 : -1) : (sort_order===0 ? -1 : 1));  \r\n        }  \r\n     }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"customized table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell className={this.getClassName(\"id\")} align=\"right\" onClick={this.handleSortChange} col_id=\"id\">ID</StyledTableCell>\r\n                        <StyledTableCell className={this.getClassName(\"name\")} onClick={this.handleSortChange} col_id=\"name\">Name</StyledTableCell>\r\n                        <StyledTableCell className={this.getClassName(\"country\")} onClick={this.handleSortChange} col_id=\"country\">Country</StyledTableCell>\r\n                        <StyledTableCell className={this.getClassName(\"dob\")} align=\"right\" onClick={this.handleSortChange} col_id=\"dob\">Date of Birth</StyledTableCell>\r\n                        <StyledTableCell className={this.getClassName(\"cost\")} align=\"right\" onClick={this.handleSortChange} col_id=\"cost\">Cost</StyledTableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    <TableRow>\r\n                        <StyledTableCell align=\"right\" style={{width: 50}}><input type=\"number\" onChange={this.handleFilterChange} col_id=\"id\" /></StyledTableCell>\r\n                        <StyledTableCell><input type=\"text\" onChange={this.handleFilterChange} col_id=\"name\" /></StyledTableCell>\r\n                        <StyledTableCell><input type=\"text\" onChange={this.handleFilterChange} col_id=\"country\" /></StyledTableCell>\r\n                        <StyledTableCell align=\"right\"><input type=\"text\" onChange={this.handleFilterChange} col_id=\"dob\" /></StyledTableCell>\r\n                        <StyledTableCell align=\"right\"><input type=\"number\" onChange={this.handleFilterChange} col_id=\"cost\" /></StyledTableCell>\r\n                    </TableRow>\r\n                    {this.state.data.map((row) => (\r\n                        <StyledTableRow key={row.name}>\r\n                        <StyledTableCell component=\"th\" scope=\"row\" align=\"right\" >{row.id}</StyledTableCell>\r\n                        <StyledTableCell>{row.name}</StyledTableCell>\r\n                        <StyledTableCell>{row.country}</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">{row.dob}</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">{row.cost}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n            );\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Players;","import {useEffect} from \"react\";\nimport './App.css';\nimport Players from \"./components/Players\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\n\nfunction App() {\n\n  useEffect(() => {\n      let sidenav = document.querySelector('#slide-out');\n      M.Sidenav.init(sidenav, {});\n  }, []);\n\n  return (\n    <div className=\"App\">\n       <nav>\n         <div className=\"container-xl\">\n            <a href=\"#\" data-target=\"slide-out\" class=\"sidenav-trigger show-on-large\"><i class=\"material-icons\">menu</i></a>\n            <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\n               <li><a href=\"#\">Home</a></li>\n               <li><a href=\"#\">About</a></li>\n            </ul>\n         </div>\n       </nav>\n        <ul id=\"slide-out\" class=\"sidenav\">\n        <li><a href=\"#Teams\">Teams</a></li>\n        <li><a href=\"#Play\">Play</a></li>\n        <li><a href=\"#Wins\">Wins</a></li>\n        </ul>\n        <Players />\n    </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'materialize-css/dist/css/materialize.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}